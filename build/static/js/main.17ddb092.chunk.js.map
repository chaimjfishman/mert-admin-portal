{"version":3,"sources":["components/PageNavbar.js","components/AddShifts.js","components/PushNotificationSender.js","components/UserMonitoring.js","components/App.js","serviceWorker.js","index.js"],"names":["PageNavbar","props","state","navDivs","navbarDivs","map","page","i","active","className","key","href","charAt","toUpperCase","substring","length","this","setState","id","React","Component","Alert","elevation","variant","AddShifts","serverUrl","allUsers","selectedMember","selectedFile","selectedType","selectedStart","selectedEnd","members","shiftTypes","types","displaySucessAlert","displayErrorAlert","displayWarningAlert","warningMsg","addShift","bind","handleFileChange","handleMemberChange","handleTypeChange","handleStartChange","handleEndChange","openSuccessAlert","closeSuccessAlert","openErrorAlert","closeErrorAlert","openWarningAlert","closeWarningAlert","typesDivs","type","value","fetch","method","then","res","json","memberList","memberDivs","memberObj","email","users","forEach","user","catch","err","console","log","userPushToken","pushToken","url","status","e","a","file","target","files","item","text","event","reason","displaySuccessAlert","style","position","left","top","transform","onChange","select","TextField","label","InputLabelProps","shrink","onClick","class","for","Snackbar","open","autoHideDuration","onClose","severity","PushNotificationSender","allSelected","options","title","message","onSelect","onRemove","resetSelcted","sendPushNotification","selectAllChange","handleTitleChange","handleMessageChange","multiselectRef","createRef","allRecipients","current","getSelectedItems","pushTokens","recipient","selectedList","selectedItem","removedItem","resetSelectedValues","displayValue","ref","closeOnSelect","disable","showCheckbox","aria-label","aria-describedby","UserMonitoring","newEmail","handleEmailChange","addEmail","preventDefault","Card","width","Body","Title","fullName","Subtitle","Text","boardPosition","rank","formCompleted","takenAthleticShift","htmlFor","placeholder","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17ddb092.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class PageNavbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnavDivs: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst pageList = ['shifts', 'notifications', 'users'];\n\n\t\tlet navbarDivs = pageList.map((page, i) => {\n\t\t\tif (this.props.active === page) {\n\t\t\t\treturn (\n\t\t\t\t\t<a className=\"nav-item nav-link active\" key={i} href={\"/\" + page}>\n\t\t\t\t\t\t{page.charAt(0).toUpperCase() + page.substring(1, page.length)}\n\t\t\t\t\t</a>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (\n\t\t\t\t\t<a className=\"nav-item nav-link\" key={i} href={\"/\" + page}>\n\t\t\t\t\t\t{page.charAt(0).toUpperCase() + page.substring(1, page.length)}\n\t\t\t\t\t</a>\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\tnavDivs: navbarDivs\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"PageNavbar\">\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t      <span className=\"navbar-brand center\">MERT Admin Portal</span>\n\t\t\t      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n\t\t\t        <div className=\"navbar-nav\">\n\t\t\t        {this.state.navDivs}\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </nav>\n\t\t\t</div>\n  \t\t);\n\t}\n}","import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport '../style/AddShifts.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class AddShifts extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// State maintained by this React component\n\t\tthis.state = {\n            serverUrl: \"http://localhost:8081/\",\n            allUsers: null,\n            selectedMember: \"\",\n            selectedFile: null,\n            selectedType: \"\",\n            selectedStart: null,\n            selectedEnd: null,\n            members: [],\n            shiftTypes: ['day', 'overnight', 'standby', 'athletic'],\n            types: [],\n            displaySucessAlert: false,\n            displayErrorAlert: false,\n            displayWarningAlert: false,\n            warningMsg: \"\"\n        }\n        \n        this.addShift = this.addShift.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleMemberChange = this.handleMemberChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handleStartChange = this.handleStartChange.bind(this);\n        this.handleEndChange = this.handleEndChange.bind(this);\n        this.openSuccessAlert = this.openSuccessAlert.bind(this);     \n        this.closeSuccessAlert = this.closeSuccessAlert.bind(this);     \n        this.openErrorAlert = this.openErrorAlert.bind(this);     \n        this.closeErrorAlert = this.closeErrorAlert.bind(this);\n        this.openWarningAlert = this.openWarningAlert.bind(this);     \n        this.closeWarningAlert = this.closeWarningAlert.bind(this);\n        \n    }\n    \n    componentDidMount() {\n        let typesDivs = this.state.shiftTypes.map((type, i) =>\n            <option value={type}> {type} </option>\n        );\n\n        this.setState({\n            types: typesDivs\n        })\n\n        // Send an HTTP request to the server.\n        fetch(this.state.serverUrl + \"members\", {\n          method: 'GET' // The type of HTTP request.\n        })\n          .then(res => res.json()) // Convert the response data to a JSON.\n          .then(memberList => {\n            if (!memberList) {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                return;\n            }\n\n            // Map each memberObj in memberList to an HTML element:\n            let memberDivs = memberList.map((memberObj, i) =>\n                <option value={memberObj.id}> {memberObj.email} </option>\n            );\n\n            let users = {}\n            memberList.forEach(user => {\n                users[user.id] = user;\n            });\n    \n            this.setState({\n                allUsers: users,\n                members: memberDivs\n            })\n          })\n          .catch(err => {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                console.log(err)\n            })    \n    }\n\n    addShift() {\n        if (this.state.selectedMember === '') {\n            this.setState({\n                warningMsg: 'You must select a member to assign the shift!'\n            }, () => this.openWarningAlert())\n            return;\n        }\n        if (this.state.selectedType === '') {\n            this.setState({\n                warningMsg: 'You must select a type for this shift!'\n            }, () => this.openWarningAlert())\n            return;\n        }\n        if (!this.state.selectedStart || !this.state.selectedEnd) {\n            this.setState({\n                warningMsg: 'You must select both a start and end time for the shift!'\n            }, () => this.openWarningAlert())\n            return;\n        }\n\n        // Send an HTTP request to the server.\n        let userPushToken = this.state.allUsers[this.state.selectedMember].pushToken;\n        let url = `${this.state.serverUrl}addshift/${this.state.selectedMember}/${this.state.selectedStart}/${this.state.selectedEnd}/${this.state.selectedType}/${userPushToken}`\n        console.log(`urs is ${url}`)\n        fetch(url, { \n                method: 'GET' // The type of HTTP request.\n            })\n            .then(res => {\n                if (res.status === 200) this.openSuccessAlert();\n                else this.openErrorAlert();\n            })\n            .catch(err => {\n                this.openErrorAlert();\n                console.log(err)\n            })\t// Print the error if there is one.\n    }\n\n    async handleFileChange(e) {\n        const file = e.target.files.item(0)\n        this.setState({\n\t\t\tselectedFile: file\n        }, () => console.log(`file changed to ${this.state.selectedFile}`));   \n        const text = await file.text();\n        console.log(text)\n    }\n\n    handleMemberChange(e) {\n        if (e.target.value === 'true') {\n            e.target.value = ''\n        }\n\t\tthis.setState({\n\t\t\tselectedMember: e.target.value\n        }, () => console.log(`member changed to ${this.state.selectedMember}`));   \n    }\n\n    handleTypeChange(e) {\n        if (e.target.value === 'true') {\n            e.target.value = ''\n        }\n\t\tthis.setState({\n\t\t\tselectedType: e.target.value\n        }, () => console.log(`type changed to ${this.state.selectedType}`));\n    }\n    \n    handleStartChange(e) {\n\t\tthis.setState({\n\t\t\tselectedStart: e.target.value\n        }, () => console.log(`start changed to ${this.state.selectedStart}`));\n    }\n    \n    handleEndChange(e) {\n\t\tthis.setState({\n\t\t\tselectedEnd: e.target.value\n        }, () => console.log(`end changed to ${this.state.selectedEnd}`));\n    }\n    \n\n    openSuccessAlert(event, reason) {\n        this.setState({\n            displaySuccessAlert: true\n        })\n    };\n    \n    closeSuccessAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displaySuccessAlert: false\n        })\n    };\n\n    openErrorAlert(event, reason) {\n        this.setState({\n            displayErrorAlert: true\n        })\n    };\n    \n    closeErrorAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayErrorAlert: false\n        })\n    };\n\n    openWarningAlert(event, reason) {\n        this.setState({\n            displayWarningAlert: true\n        })\n    };\n    \n    closeWarningAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayWarningAlert: false\n        })\n    };\n\t\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"Shifts\">\n\t\t\t\t<PageNavbar active=\"shifts\" />\n\n                    <div className=\"container addshifts-container\" style={{\n        position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }}>\n                        <div className=\"jumbotron\" >\n\n                        <select value={this.state.selectedMember} onChange={this.handleMemberChange} className=\"dropdown\" id=\"membersDropdown\">\n                            <option select value> -- select member -- </option>\n                            {this.state.members}\n                        </select>\n\n                        <div>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <select value={this.state.selectedType} onChange={this.handleTypeChange} className=\"dropdown\" id=\"typesDropdown\">\n                            <option select value> -- select shift type -- </option>\n                            {this.state.types}\n                        </select>\n\n                        <div>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <form >\n                            <TextField\n                                id=\"datetime-local\"\n                                label=\"Shift Start\"\n                                type=\"datetime-local\"\n                                onChange={this.handleStartChange}\n                                // defaultValue=\"2017-05-24T10:30\"\n                                // className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </form>\n\n                        <div>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <form >\n                            <TextField\n                                id=\"datetime-local\"\n                                label=\"Shift End\"\n                                type=\"datetime-local\"\n                                onChange={this.handleEndChange}\n                                // defaultValue=\"2017-05-24T10:30\"\n                                // className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </form>\n\n                        <div>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <button \n                            className=\"submit-btn\" \n                            id=\"shiftSubmitBtn\" \n                            onClick={this.addShift}\n                        >\n                            Add Shift\n                        </button>\n\n                        <div>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"exampleFormControlFile1\">Upload Schedule File</label>\n                                <input type=\"file\" class=\"form-control-file\" id=\"exampleFormControlFile1\" onChange={this.handleFileChange}/>\n                            </div>\n                        </form>\n                    </div>  \n                </div>\n                <Snackbar open={this.state.displaySuccessAlert} autoHideDuration={6000} onClose={this.closeSuccessAlert}>\n                    <Alert onClose={this.closeSuccessAlert} severity=\"success\">\n                        Shift Successfully Added!\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={this.state.displayErrorAlert} autoHideDuration={6000} onClose={this.closeErrorAlert}>\n                    <Alert onClose={this.closeErrorAlert} severity=\"error\">\n                        Error: There was a problem adding the shift.\n                    </Alert>\n                </Snackbar>\n                <Snackbar open={this.state.displayWarningAlert} autoHideDuration={6000} onClose={this.closeWarningAlert}>\n                    <Alert onClose={this.closeWarningAlert} severity=\"warning\">\n                        {this.state.warningMsg}\n                    </Alert>\n                </Snackbar>\n\t\t    </div>\n\t\t);\n\t}\n}","import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport '../style/PushNotificationSender.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class PushNotificationSender extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// State maintained by this React component\n\t\tthis.state = {\n            serverUrl: \"http://localhost:8081/\",\n            allSelected: false,\n            options: [],\n            title: \"\",\n            message: \"\",\n            displaySucessAlert: false,\n            displayErrorAlert: false,\n            displayWarningAlert: false,\n            warningMsg: \"\"\n        }\n\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n        this.resetSelcted = this.resetSelcted.bind(this);\n        this.sendPushNotification = this.sendPushNotification.bind(this);      \n        this.selectAllChange = this.selectAllChange.bind(this);     \n        this.handleTitleChange = this.handleTitleChange.bind(this);     \n        this.handleMessageChange = this.handleMessageChange.bind(this);     \n        this.openSuccessAlert = this.openSuccessAlert.bind(this);     \n        this.closeSuccessAlert = this.closeSuccessAlert.bind(this);     \n        this.openErrorAlert = this.openErrorAlert.bind(this);     \n        this.closeErrorAlert = this.closeErrorAlert.bind(this);\n        this.openWarningAlert = this.openWarningAlert.bind(this);     \n        this.closeWarningAlert = this.closeWarningAlert.bind(this);\n        \n        this.multiselectRef = React.createRef();\n    }\n    \n    componentDidMount() {\n        // Send an HTTP request to the server.\n        fetch(this.state.serverUrl + \"members\", {\n          method: 'GET' // The type of HTTP request.\n        })\n          .then(res => res.json()) // Convert the response data to a JSON.\n          .then(memberList => {\n            if (!memberList) {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                return;\n            }\n    \n            this.setState({\n                options: memberList\n            })\n          })\n          .catch(err => {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                console.log(err)\n            })\t// Print the error if there is one.\n    }\n\n    sendPushNotification() {\n        if (this.state.title === '' || this.state.message === '') {\n            this.setState({\n                warningMsg: 'You must include both a title and message in the notification!'\n            }, () => this.openWarningAlert())\n            return;\n        }\n\n        let allRecipients = this.state.allSelected ? this.state.options : this.multiselectRef.current.getSelectedItems()\n        let pushTokens=''\n        allRecipients.forEach(recipient => pushTokens+=recipient.pushToken+',')\n\n        if (pushTokens === '') {\n            this.setState({\n                warningMsg: 'You must select at least one member to recieve the notification!'\n            }, () => this.openWarningAlert())\n            return;\n        }\n\n        let url = `${this.state.serverUrl}notifications/${pushTokens}/${this.state.title}/${this.state.message}`\n        // Send an HTTP request to the server.\n        fetch(url, {\n                method: 'GET' // The type of HTTP request.\n            })\n            .then(res => {\n                if (res.status === 200) this.openSuccessAlert();\n                else this.openErrorAlert();\n            })\n            .catch(err => {\n                this.openErrorAlert();\n                console.log(err) \n            })\t// Print the error if there is one.\n    }\n\n    handleTitleChange(e) {\n        this.setState({ \n            title: e.target.value \n        })\n    }\n\n    handleMessageChange(e) {\n        this.setState({ \n            message: e.target.value \n        })\n    }\n\n    onSelect(selectedList, selectedItem) {}\n    \n    onRemove(selectedList, removedItem) {}\n\n    resetSelcted() {\n        this.multiselectRef.current.resetSelectedValues()\n    }\n\n    selectAllChange() {\n        this.setState({\n            allSelected: !this.state.allSelected\n        })\n    }\n\n    openSuccessAlert(event, reason) {\n        this.setState({\n            displaySuccessAlert: true\n        })\n    };\n    \n    closeSuccessAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displaySuccessAlert: false\n        })\n    };\n\n    openErrorAlert(event, reason) {\n        this.setState({\n            displayErrorAlert: true\n        })\n    };\n    \n    closeErrorAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayErrorAlert: false\n        })\n    };\n\n    openWarningAlert(event, reason) {\n        this.setState({\n            displayWarningAlert: true\n        })\n    };\n    \n    closeWarningAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayWarningAlert: false\n        })\n    };\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"PushNotificationSender\">\n                <PageNavbar active=\"notifications\" />\n\n                <div className=\"container addshifts-container\" style={{\n                    position: 'absolute', left: '50%', top: '50%',\n                    transform: 'translate(-50%, -50%)'\n                }}>\n                    <div className=\"jumbotron\" >\n\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" \n                                type=\"checkbox\" value=\"\" \n                                id=\"defaultCheck1\"\n                                onClick={this.selectAllChange}\n                            />\n                            \n                            <label className=\"form-check-label\">\n                                Notify Everyone!\n                            </label>\n                        </div>\n\n                        <Multiselect\n                            options={this.state.options} // Options to display in the dropdown\n                            onSelect={this.onSelect} // Function will trigger on select event\n                            onRemove={this.onRemove} // Function will trigger on remove event\n                            displayValue=\"email\" // Property name to display in the dropdown options\n                            ref={this.multiselectRef}\n                            closeOnSelect={false}\n                            disable={this.state.allSelected}\n                            showCheckbox={true}\n                        />\n\n                        <button \n                            className=\"submit-btn\" \n                            id=\"resetBtin\" \n                            onClick={this.resetSelcted}\n                        >\n                            Reset Selection\n                        </button>\n\n                        <div>\n                            <br/><br/><br/>\n                        </div>\n\n                        <div class=\"input-group input-group-sm mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Title</span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={this.handleTitleChange}/>\n                        </div>\n\n                        <div>\n                            <br/>\n                        </div>\n\n                        <div class=\"input-group input-group-sm mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Message</span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={this.handleMessageChange}/>\n                        </div>\n\n                        <div>\n                            <br/><br/><br/><br/><br/><br/><br/><br/>\n                        </div>\n                        \n                        <button \n                            className=\"submit-btn\" \n                            id=\"decadesSubmitBtn\" \n                            onClick={this.sendPushNotification}\n                        >\n                            Send Notification\n                        </button>\n\n                    </div>\n                </div>\n                <Snackbar open={this.state.displaySuccessAlert} autoHideDuration={6000} onClose={this.closeSuccessAlert}>\n                    <Alert onClose={this.closeSuccessAlert} severity=\"success\">\n                        Notification Successfully Sent!\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={this.state.displayErrorAlert} autoHideDuration={6000} onClose={this.closeErrorAlert}>\n                    <Alert onClose={this.closeErrorAlert} severity=\"error\">\n                        Error: There was a problem sending the notification.\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={this.state.displayWarningAlert} autoHideDuration={6000} onClose={this.closeWarningAlert}>\n                    <Alert onClose={this.closeWarningAlert} severity=\"warning\">\n                        {this.state.warningMsg}\n                    </Alert>\n                </Snackbar>\n\t\t    </div>\n\t\t);\n\t}\n}","import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport '../style/UserMonitoring.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Card from \"react-bootstrap/Card\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class UserMonitoring extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// State maintained by this React component\n\t\tthis.state = {\n            serverUrl: \"http://localhost:8081/\",\n            allUsers: null,\n            selectedMember: null,\n            members: [],\n            newEmail: \"\",\n            displaySucessAlert: false,\n            displayErrorAlert: false,\n            displayWarningAlert: false,\n            warningMsg: \"\"\n        }\n   \n        this.handleMemberChange = this.handleMemberChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.addEmail = this.addEmail.bind(this);\n        this.openSuccessAlert = this.openSuccessAlert.bind(this);     \n        this.closeSuccessAlert = this.closeSuccessAlert.bind(this);     \n        this.openErrorAlert = this.openErrorAlert.bind(this);     \n        this.closeErrorAlert = this.closeErrorAlert.bind(this);\n        this.openWarningAlert = this.openWarningAlert.bind(this);     \n        this.closeWarningAlert = this.closeWarningAlert.bind(this);\n        \n        this.multiselectRef = React.createRef();\n    }\n    \n    componentDidMount() {\n        // Send an HTTP request to the server.\n        fetch(this.state.serverUrl + \"members\", {\n          method: 'GET' // The type of HTTP request.\n        })\n          .then(res => res.json()) // Convert the response data to a JSON.\n          .then(memberList => {\n            if (!memberList) {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                return;\n            }\n\n            // Map each memberObj in memberList to an HTML element:\n            let memberDivs = memberList.map((memberObj, i) =>\n                <option value={memberObj.id}> {memberObj.email} </option>\n            );\n\n            let users = {}\n            memberList.forEach(user => {\n                users[user.id] = user;\n            });\n    \n            this.setState({\n                allUsers: users,\n                members: memberDivs\n            })\n          })\n          .catch(err => {\n                this.setState({\n                    warningMsg: 'Error retrieving member list from server!'\n                }, () => this.openWarningAlert())\n                console.log(err)\n            })   \n    }\n\n    handleMemberChange(e) {\n        if (e.target.value === 'true') {\n            return;\n        }\n\t\tthis.setState({\n\t\t\tselectedMember: this.state.allUsers[e.target.value]\n        }, () => console.log(this.state.selectedMember));   \n    }\n\n    handleEmailChange(e) {\n        this.setState({ \n            newEmail: e.target.value\n        });\n    }\n\n    addEmail(e) {\n        if (this.state.newEmail === '') {\n            e.preventDefault();\n            this.setState({\n                warningMsg: 'You must enter an email address'\n            }, () => this.openWarningAlert())\n            return;\n        }\n        \n        let url = `${this.state.serverUrl}whitelist/${this.state.newEmail}`;\n        // Send an HTTP request to the server.\n        fetch(url, {\n                method: 'GET' // The type of HTTP request.\n            })\n            .then(res => {\n                if (res.status === 200) this.openSuccessAlert();\n                else this.openErrorAlert();\n            })\n            .catch(err => {\n                this.openErrorAlert();\n                console.log(err) \n            })\n    }\n\n    openSuccessAlert(event, reason) {\n        this.setState({\n            displaySuccessAlert: true\n        })\n    };\n    \n    closeSuccessAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displaySuccessAlert: false\n        })\n    };\n\n    openErrorAlert(event, reason) {\n        this.setState({\n            displayErrorAlert: true\n        })\n    };\n    \n    closeErrorAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayErrorAlert: false\n        })\n    };\n\n    openWarningAlert(event, reason) {\n        this.setState({\n            displayWarningAlert: true\n        })\n    };\n    \n    closeWarningAlert(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            displayWarningAlert: false\n        })\n    };\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"UserMonitoring\">\n                <PageNavbar active=\"users\" />\n\n                <div className=\"container addshifts-container\" style={{\n                    position: 'absolute', left: '50%', top: '50%',\n                    transform: 'translate(-50%, -50%)'\n                }}>\n\n                <div className=\"jumbotron\" >\n                \n                    <div className='rowC'>\n                        <div className='rowEl1'>\n                            <select value={this.state.selectedMember} onChange={this.handleMemberChange} className=\"dropdown\" id=\"membersDropdown\">\n                                <option select value> -- select member -- </option>\n                                {this.state.members}\n                            </select>\n                        </div>\n\n                        <div className='rowEl'>\n                            <Card style={{ width: '25rem' }}>\n                                <Card.Body>\n                                    <Card.Title>{this.state.selectedMember ? this.state.selectedMember.fullName : 'Name'}</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">{this.state.selectedMember ? this.state.selectedMember.email: 'Email'}</Card.Subtitle>\n                                    <Card.Text>\n                                        Board Position: {this.state.selectedMember ? this.state.selectedMember.boardPosition : ''} <br/>\n                                        Rank: {this.state.selectedMember ? this.state.selectedMember.rank : ''} <br/>\n                                        Completed Form: {this.state.selectedMember ? (this.state.selectedMember.formCompleted ? \"Yes\" : \"No\") : ''} <br/>\n                                        Athletic Shift Completed: {this.state.selectedMember ? (this.state.selectedMember.takenAthleticShift ? \"Yes\" : \"No\") : ''} <br/>\n                                        Board Position: {this.state.selectedMember ? this.state.selectedMember.boardPosition : ''}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </div>\n\n                        <div className='rowEl3'>\n                            <button \n                                className=\"submit-btn\" \n                                id=\"deleteUserBtn\" \n                                onClick={console.log('deleted')}\n                            >\n                                Remove User\n                            </button>\n                        </div>\n                    </div>\n\n                    <hr></hr>\n\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">User Email address</label>\n                            <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={this.handleEmailChange}/>\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Users must be added to have permissions to sign up in the app.</small>\n                        </div>\n                        <button className=\"btn btn-primary\" onClick={this.addEmail}>Add New Email</button>\n                    </form>\n                </div>\n                </div>\n                <Snackbar open={this.state.displaySuccessAlert} autoHideDuration={6000} onClose={this.closeSuccessAlert}>\n                    <Alert onClose={this.closeSuccessAlert} severity=\"success\">\n                        User Email Successfully Added!\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={this.state.displayErrorAlert} autoHideDuration={6000} onClose={this.closeErrorAlert}>\n                    <Alert onClose={this.closeErrorAlert} severity=\"error\">\n                        Error: There was a problem add the user email.\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={this.state.displayWarningAlert} autoHideDuration={6000} onClose={this.closeWarningAlert}>\n                    <Alert onClose={this.closeWarningAlert} severity=\"warning\">\n                        {this.state.warningMsg}\n                    </Alert>\n                </Snackbar>\n\t\t    </div>\n\t\t);\n\t}\n}","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\nimport AddShifts from './AddShifts';\nimport PushNotificationSender from './PushNotificationSender';\nimport UserMonitoring from './UserMonitoring';\n\nexport default class App extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<AddShifts />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/shifts\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<AddShifts />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/notifications\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<PushNotificationSender />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/users\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<UserMonitoring />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}